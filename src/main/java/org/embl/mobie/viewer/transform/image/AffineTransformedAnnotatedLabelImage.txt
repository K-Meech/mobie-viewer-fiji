/*-
 * #%L
 * Fiji viewer for MoBIE projects
 * %%
 * Copyright (C) 2018 - 2022 EMBL
 * %%
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * #L%
 */
package org.embl.mobie.viewer.transform.image;

import net.imglib2.realtransform.AffineTransform3D;
import org.embl.mobie.viewer.annotation.Annotation;
import org.embl.mobie.viewer.image.AnnotatedLabelImage;
import org.embl.mobie.viewer.image.DefaultAnnotatedLabelImage;
import org.embl.mobie.viewer.table.AnnData;
import org.embl.mobie.viewer.transform.AnnotationAffineTransformer;
import org.embl.mobie.viewer.transform.TransformedAnnData;

// FIXME probably not worth extending AffineTransformedImage, because
//   we have to re-build the AnnotatedImage with the transformed AnnData
//   we can probably get rid of this all-together!
public class AffineTransformedAnnotatedLabelImage< A extends Annotation > implements AnnotatedLabelImage< A >
{
	private AnnData< A > transformedAnnData;

	public AffineTransformedAnnotatedLabelImage( AnnotatedLabelImage< A > annotatedLabelImage, String transformedImageName, AffineTransform3D affineTransform3D )
	{
		// FIXME
		//   The Annotation objects change their identity in AnnotationAffineTransformer
		//   However the annotations that are used to form the pixel
		//   values of the AnnotatedImage are not being changed here.

		final AnnData< A > annData = annotatedLabelImage.getAnnData();
		final AnnotationAffineTransformer affineTransformer = new AnnotationAffineTransformer( affineTransform3D );
		transformedAnnData = new TransformedAnnData( annData, affineTransformer );


		if ( annotatedLabelImage instanceof DefaultAnnotatedLabelImage )
		{
			// FIXME This will not work because we don't have AffineTransformedAnnotatedLabelImage
			//   as a class

			( ( DefaultAnnotatedLabelImage<A> ) annotatedLabelImage ).getLabelImage()
		}
		else
		{
			throw new RuntimeException( "Affine transformation of " + annotatedLabelImage.getClass().getName() + " is not implemented.");
		}

		// TODO: One option may be to set the AnnData of the annotated image
	}

	@Override
	public AnnData< A > getAnnData()
	{
		return transformedAnnData;
	}
}
